<script>
  let placeholderFunction = function() { placeholderFunction.q.push(arguments) }

  document.addEventListener('turbolinks:load', function() {
    window.fwSettings={
      widget_id: 101000001762
    };

    !function() {
      if ("function"!=typeof window.FreshworksWidget) {
        var n=placeholderFunction;
        n.q=[],
        window.FreshworksWidget=n
      }
    }()

    let script = document.createElement('script');
    script.type = 'text/javascript';
    script.id = 'help-widget';
    script.src = 'https://euc-widget.freshworks.com/no-response-expected.js';
    document.head.appendChild(script);

    FreshworksWidget('hide', 'launcher');
  });

  let navigationTimeout;

  document.addEventListener('turbolinks:before-visit', function(e) {
    clearTimeout(navigationTimeout);

    if (placeholderFunction === window.FreshworksWidget) {
      navigationTimeout = setTimeout(function() {
        console.log("Look what happens if the script doesn't work")

        return function() {
          Turbolinks.visit(e.data.url);
        }
      }(e), 1000);

      return e.preventDefault();
    }
  });

  document.addEventListener('turbolinks:visit', function(e) {
    if (placeholderFunction === window.FreshworksWidget) {
      // full reload when help widget is still loading during browser back/forward
      // needed since before-visit isn't fired and there is no other way to cancel browser back/forward
      window.location.href = e.data.url;

      return;
    }

    let scriptTag = document.querySelector('script[id="help-widget"]');
    scriptTag && scriptTag.remove();
    window.FreshworksWidget && FreshworksWidget('destroy');
    delete window.FreshworksWidget;
  });
</script>
